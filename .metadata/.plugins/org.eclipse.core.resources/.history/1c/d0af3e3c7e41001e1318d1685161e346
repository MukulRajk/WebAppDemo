package in.mindcraft;

import java.util.*;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class MyController {

	private List<Product> list=new ArrayList<>();
	
	public MyController() {
		list.add(new Product(101,"marker",50));
		list.add(new Product(102,"water bottle",70));
		list.add(new Product(103,"bag",250));
	}
	
	@ResponseBody
	@RequestMapping(value="/products",method=RequestMethod.GET)
	public List<Product> getProducts(){
		System.out.println("get all products..");
		return list;
		
		
	}
	
	@RequestMapping(value="/products/{id}",method=RequestMethod.GET)  // for multiple ids

	public Product getProduct(@PathVariable int id) {
		for(Product p:list) {
			if(p.getPid()==id)
				return p;
			
		}
		return null;
		}
	
	@RequestMapping(value="/products",method=RequestMethod.POST)  // for multiple ids  //SEND
public List<Product> addProduct(@RequestBody Product p){
		list.add(p);
		return list;
		
	}
	
	// update request PUT {id}->request body
	/*@RequestMapping(value="/products/{id}",method=RequestMethod.PUT)    //UPDATE
	public List<Product> updateProduct(@PathVariable int id,@RequestBody Product p){
		for(Product p1:list) {
			if(p1.getPid()==id)
				return p1;
			
		}
		list.update(p);
		return list;
	}*/
	
	@RequestMapping(value="/products/{id}",method=RequestMethod.PUT)
	public Product updateProduct(@PathVariable int id, @RequestBody Product p) {
	    for (int i = 0; i < list.size(); i++) {
	        if (list.get(i).getPid() == id) {
	            list.set(i, p); // Update the product at index i with the new product p
	            return p; // Return the updated product
	        }
	    }
	    
	    return null; // Return null if no product with the given ID was found
	}

	
	@RequestMapping(value="/products/{id}",method=RequestMethod.DELETE)   //DELETE
	public List<Product>  deleteProduct(@PathVariable int id){
		
		return list;
	}
	
	}

